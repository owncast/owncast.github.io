"use strict";(self.webpackChunkowncast_docusaurus=self.webpackChunkowncast_docusaurus||[]).push([[6787],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(96540);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}},55252:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"thirdparty/webhooks","title":"Webhooks","description":"Webhooks description","source":"@site/docs/thirdparty/webhooks.md","sourceDirName":"thirdparty","slug":"/thirdparty/webhooks","permalink":"/docs/thirdparty/webhooks","draft":false,"unlisted":false,"editUrl":"https://github.com/owncast/owncast.github.io/edit/main/docs/thirdparty/webhooks.md","tags":[],"version":"current","frontMatter":{"title":"Webhooks","description":"Webhooks description","date":"2020-11-17T19:11:42.000Z","lastmod":"2020-11-17T19:11:42.000Z","draft":false,"images":[],"weight":48,"toc":true,"type":"subpages"}}');var i=t(74848),o=t(28453);const a={title:"Webhooks",description:"Webhooks description",date:new Date("2020-11-17T19:11:42.000Z"),lastmod:new Date("2020-11-17T19:11:42.000Z"),draft:!1,images:[],weight:48,toc:!0,type:"subpages"},r=void 0,l={},d=[{value:"How to accept webhooks",id:"how-to-accept-webhooks",level:3},{value:"Your code",id:"your-code",level:3},{value:"High level webhooks",id:"high-level-webhooks",level:3},{value:"Webhook Examples",id:"webhook-examples",level:2},{value:"CHAT",id:"chat",level:4},{value:"NAME_CHANGED",id:"name_changed",level:4},{value:"USER_JOINED",id:"user_joined",level:4},{value:"STREAM_STARTED",id:"stream_started",level:4},{value:"STREAM_STOPPED",id:"stream_stopped",level:4},{value:"STREAM_TITLE_UPDATED",id:"stream_title_updated",level:4},{value:"VISIBILITY-UPDATE",id:"visibility-update",level:4},{value:"clientId vs. user.id",id:"clientid-vs-userid",level:3},{value:"Test webhooks on a local development environment",id:"test-webhooks-on-a-local-development-environment",level:3},{value:"Test webhooks before writing any code",id:"test-webhooks-before-writing-any-code",level:3},{value:"Test webhooks from a production instance of Owncast",id:"test-webhooks-from-a-production-instance-of-owncast",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Owncast supports HTTP Webhooks to notify third-party applications (such as chatbots) about events on the stream. In other words: Webhooks will send events to your code when things happen on your Owncast server."}),"\n",(0,i.jsx)(n.p,{children:"The following is a list of events you can get notified about."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Event Type"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"webhook triggers when ..."})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.a,{href:"#chat",children:"CHAT"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"user sends a chat message"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.a,{href:"#name_changed",children:"NAME_CHANGED"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"user changes their username"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.a,{href:"#user_joined",children:"USER_JOINED"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"user joins the chat"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.a,{href:"#stream_started",children:"STREAM_STARTED"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"an incoming RTMP stream is detected"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.a,{href:"#stream_stopped",children:"STREAM_STOPPED"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"an incoming RTMP stream disconnects (e.g. OBS stops)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.a,{href:"#stream_title_updated",children:"STREAM_TITLE_UPDATED"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"the title of the stream is updated"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.a,{href:"#visibility-update",children:"VISIBILITY-UPDATE"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"a previously sent chat message becomes visible/invisible (set by an Administrator/Moderator)"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"how-to-accept-webhooks",children:"How to accept webhooks"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Visit ",(0,i.jsx)(n.code,{children:"/admin/webhooks"})," on your owncast server."]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.code,{children:"Create Webhook"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Put in the full public URL to an endpoint that can receive this webhook."}),"\n",(0,i.jsx)(n.li,{children:"Select the events you want to be notified of."}),"\n",(0,i.jsx)(n.li,{children:"Save this new webhook."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"your-code",children:"Your code"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["In any language, on any kind of web server, create an endpoint that accepts a HTTP ",(0,i.jsx)(n.code,{children:"POST"})," request.  This is where Owncast will be sending events."]}),"\n",(0,i.jsxs)(n.li,{children:["Each event payload will have a ",(0,i.jsx)(n.code,{children:"type"})," property that states which event type it is, and an ",(0,i.jsx)(n.code,{children:"eventData"})," object that includes specific properties of that event."]}),"\n",(0,i.jsx)(n.li,{children:"If you need a starting point see our example projects."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"high-level-webhooks",children:"High level webhooks"}),"\n",(0,i.jsxs)(n.p,{children:["Webhooks utilize the ",(0,i.jsx)(n.code,{children:"HTTP POST"})," method to push data to an endpoint. The request body of the webhook is plain ",(0,i.jsx)(n.code,{children:"JSON"}),".\nThus the ContentType header for the request is ",(0,i.jsx)(n.code,{children:"application/json"}),". Each webhook body follows a simple JSON structure."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "type": "",\n    "eventData": {}\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"where"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"type"})," gives information about what kind of event it is (one of the types from the table above)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"eventData"})," gives more information on the event. The structure of ",(0,i.jsx)(n.code,{children:"eventData"})," is different for each ",(0,i.jsx)(n.code,{children:"type"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Examples of what ",(0,i.jsx)(n.code,{children:"eventData"})," to expect for each event type are below."]}),"\n",(0,i.jsx)(n.h2,{id:"webhook-examples",children:"Webhook Examples"}),"\n",(0,i.jsx)(n.h4,{id:"chat",children:"CHAT"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "type": "CHAT",\n    "eventData": {\n        "user": {\n            "id": "qSRQpeM7R",\n            "displayName": "lazyDaisy",\n            "displayColor": 182,\n            "createdAt": "2021-08-12T07:51:37.470812684Z",\n            "previousNames": ["lazyDaisy"],\n            "nameChangedAt": "2022-09-19T12:33:59.42313245+02:00",\n            "isBot": false,\n            "authenticated": false\n        },\n        "clientId": 2,\n        "body": "hello world \\u003cimg class=\\"emoji\\" alt=\\":beerparrot:\\" title=\\":beerparrot:\\" src=\\"/img/emoji/beerparrot.gif\\"\\u003e",\n        "rawBody": "hello world \\u003cimg class=\\"emoji\\" alt=\\":beerparrot:\\" title=\\":beerparrot:\\" src=\\"/img/emoji/beerparrot.gif\\"\\u003e",\n        "id": "j-rXteG7R",\n        "visible": true,\n        "timestamp": "2021-08-12T07:53:12.061982913Z"\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Note: the field ",(0,i.jsx)(n.code,{children:"user"})," in the chat was introduced with ",(0,i.jsx)(n.code,{children:"v0.0.8"}),". Before ",(0,i.jsx)(n.code,{children:"v0.0.8"})," a simple string field with the name ",(0,i.jsx)(n.code,{children:"author"})," was used."]}),"\n",(0,i.jsx)(n.h4,{id:"name_changed",children:"NAME_CHANGED"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "type": "NAME_CHANGE",\n    "eventData": {\n        "type": "NAME_CHANGE",\n        "id": "",\n        "timestamp": "0001-01-01T00:00:00Z",\n        "user": {\n            "id": "qSRQpeM7R",\n            "displayName": "NotSoLazyDaisy",\n            "displayColor": 182,\n            "createdAt": "2021-08-12T07:51:37.470812684Z",\n            "previousNames": ["lazyDaisy"],\n            "nameChangedAt": "2022-09-19T12:33:59.423278816+02:00",\n            "isBot": false,\n            "authenticated": false\n        },\n        "clientId": 2,\n        "newName": "NotSoLazyDaisy"\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"user_joined",children:"USER_JOINED"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "type": "USER_JOINED",\n    "eventData": {\n        "id": "wAgcTeM7g",\n        "timestamp": "2021-08-12T08:19:28.921355401Z",\n        "user": {\n            "id": "yFgco6M7R",\n            "displayName": "laughing-cray",\n            "displayColor": 257,\n            "createdAt": "2021-08-12T08:19:28.759651178Z",\n            "previousNames": ["laughing-cray"],\n            "nameChangedAt": "0001-01-01T00:00:00Z",\n            "isBot": false,\n            "authenticated": false\n        },\n        "clientId": 2\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"stream_started",children:"STREAM_STARTED"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "type": "STREAM_STARTED",\n    "eventData": {\n        "id": "WtokptnVR",\n        "name": "Owncast",\n        "streamTitle": "",\n        "summary": "Welcome to your new Owncast server! This description can be changed in the admin. Visit https://owncast.online/docs/configuration/ to learn more.",\n        "timestamp": "2022-09-19T12:30:26.97907142+02:00"\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"stream_stopped",children:"STREAM_STOPPED"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "type": "STREAM_STOPPED",\n    "eventData": {\n        "id": "YP-aptn4g",\n        "name": "Owncast",\n        "streamTitle": "",\n        "summary": "Welcome to your new Owncast server! This description can be changed in the admin. Visit https://owncast.online/docs/configuration/ to learn more.",\n        "timestamp": "2022-09-19T12:40:21.205872269+02:00"\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"stream_title_updated",children:"STREAM_TITLE_UPDATED"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "type": "STREAM_TITLE_UPDATED",\n  "eventData": {\n    "id": "DmeikEf4Rz",\n    "name": "New Owncast Server",\n    "status": {\n      "lastConnectTime": null,\n      "lastDisconnectTime": "2024-10-24T22:35:05Z",\n      "versionNumber": "0.1.3",\n      "streamTitle": "Test stream title change",\n      "viewerCount": 0,\n      "overallMaxViewerCount": 7,\n      "sessionMaxViewerCount": 2,\n      "online": false\n    },\n    "streamTitle": "Test stream title change",\n    "summary": "This is a new live video streaming server powered by Owncast.",\n    "timestamp": "2023-03-27T21:50:10.121391094-07:00"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"visibility-update",children:"VISIBILITY-UPDATE"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "type": "VISIBILITY-UPDATE",\n    "eventData": {\n        "id": "zqGupt7VR",\n        "MessageIDs": [\n            "-Zzltt74g",\n            "rvd2ppn4g"\n        ],\n        "timestamp": "2022-09-19T12:44:28.225779601+02:00",\n        "Visible": false\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MessageIDs"})," is a list of IDs of messages that had their visibility changed."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"clientid-vs-userid",children:"clientId vs. user.id"}),"\n",(0,i.jsxs)(n.p,{children:["When a user is connected from multiple devices (or multiple browsers) at the same time with the same username, Owncast differentiates between their sessions with a ",(0,i.jsx)(n.code,{children:"clientId"}),". Users can have multiple clientIds - a single clientId represents a single connection to Owncast."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"clientId"})," is a number, whereas ",(0,i.jsx)(n.code,{children:"user.id"})," can container uppercase, lowercase and numeric characters."]}),"\n",(0,i.jsx)(n.h3,{id:"test-webhooks-on-a-local-development-environment",children:"Test webhooks on a local development environment"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Start Owncast locally (e.g. via docker)."}),"\n",(0,i.jsxs)(n.li,{children:["Visit ",(0,i.jsx)(n.code,{children:"localhost:8080/admin"}),", authenticate with Username: ",(0,i.jsx)(n.code,{children:"admin"})," and the default streaming key: ",(0,i.jsx)(n.code,{children:"abc123"}),"."]}),"\n",(0,i.jsx)(n.li,{children:'Navigate to the "Integration" menu-block on the left side, click "Webhooks", then "Create Webhook".'}),"\n",(0,i.jsxs)(n.li,{children:["Set the Webhook Address to point to your application/integration (something like: ",(0,i.jsx)(n.code,{children:"http://localhost:8100/webhooks/incoming"}),")."]}),"\n",(0,i.jsx)(n.li,{children:"Select the types of events that you want to receive."}),"\n",(0,i.jsx)(n.li,{children:'Press "OK" to save the webhook.'}),"\n",(0,i.jsxs)(n.li,{children:["Start your integration/application listening on the previously configured address.","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Optionally, start an interception proxy (e.g. Burp) if you want to inspect the HTTP messages beforehand."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Trigger events yourself (e.g. write a message to the chat, connect/disconnect your streaming software to Owncast)."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"test-webhooks-before-writing-any-code",children:"Test webhooks before writing any code"}),"\n",(0,i.jsxs)(n.p,{children:["If you want to test how webhooks work before you write any code, create a test endpoint at ",(0,i.jsx)(n.a,{href:"https://requestcatcher.com/",children:"RequestCatcher"}),", and add the URL it gives you as a webhook in your admin and see the requests come through."]}),"\n",(0,i.jsx)(n.h3,{id:"test-webhooks-from-a-production-instance-of-owncast",children:"Test webhooks from a production instance of Owncast"}),"\n",(0,i.jsxs)(n.p,{children:["If you already have an Owncast instance running in production, listening to the world wide web, you might want to make use ",(0,i.jsx)(n.a,{href:"https://ngrok.com/",children:"ngrok"})," to tunnel HTTP requests to your local development environment."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);