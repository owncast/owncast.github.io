"use strict";(self.webpackChunkowncast_docusaurus=self.webpackChunkowncast_docusaurus||[]).push([[2573],{28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>l});var n=s(96540);const o={},i=n.createContext(o);function r(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(i.Provider,{value:t},e.children)}},73985:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>a,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"sslproxies/lighttpd","title":"lighttpd","description":"lighttpd is a lightweight option for SSL proxying.","source":"@site/docs/sslproxies/lighttpd.md","sourceDirName":"sslproxies","slug":"/sslproxies/lighttpd","permalink":"/docs/sslproxies/lighttpd","draft":false,"unlisted":false,"editUrl":"https://github.com/owncast/owncast.github.io/edit/main/docs/sslproxies/lighttpd.md","tags":[],"version":"current","sidebarPosition":80,"frontMatter":{"title":"lighttpd","description":"lighttpd is a lightweight option for SSL proxying.","sidebar_position":80},"sidebar":"docs","previous":{"title":"Apache","permalink":"/docs/sslproxies/apache"},"next":{"title":"HAProxy","permalink":"/docs/sslproxies/haproxy"}}');var o=s(74848),i=s(28453);const r={title:"lighttpd",description:"lighttpd is a lightweight option for SSL proxying.",sidebar_position:80},l=void 0,p={},c=[{value:"SSL",id:"ssl",level:2},{value:"Reverse Proxy",id:"reverse-proxy",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://www.lighttpd.net/",children:"lighttpd"})," is a light HTTP server which can be configured as a suitable reverse proxy via the ",(0,o.jsx)(t.a,{href:"https://redmine.lighttpd.net/projects/lighttpd/wiki/Mod_proxy",children:"mod_proxy"})," module."]}),"\n",(0,o.jsx)(t.h2,{id:"ssl",children:"SSL"}),"\n",(0,o.jsxs)(t.p,{children:["An implementation of ",(0,o.jsx)(t.a,{href:"https://redmine.lighttpd.net/projects/lighttpd/wiki/Docs_SSL",children:"SSL support"})," via the mod_openssl module using OpenSSL may appear as follows:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'$SERVER["socket"] == "[::]:443" {\n  ssl.engine = "enable"\n  ssl.cipher-list = "HIGH"\n  $HTTP["host"] == "owncast.yourdomain.com" {\n    ssl.pemfile = "/etc/letsencrypt/live/yourdomain.com/fullchain.pem"\n    ssl.privkey = "/etc/letsencrypt/live/yourdomain.com/privkey.pem"\n    ssl.dh-file = "/etc/letsencrypt/ssl-dhparams.pem"\n  }\n}\n'})}),"\n",(0,o.jsx)(t.h2,{id:"reverse-proxy",children:"Reverse Proxy"}),"\n",(0,o.jsx)(t.p,{children:"Proxying of incoming websocket connections is integrated with the module."}),"\n",(0,o.jsx)(t.p,{children:"An example configuration for lighttpd might appear as follows:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'$HTTP["host"] == "owncast.yourdomain.com" {\n  proxy.forwarded = ( "host" => 1,\n                      "proto" => 1,\n                      "for" => 1,\n                      "remote_user" => 1 )\n\n  # Required for websocket (chat) forwarding:\n  proxy.header = ( "upgrade" => "enable" )\n}\n'})})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);