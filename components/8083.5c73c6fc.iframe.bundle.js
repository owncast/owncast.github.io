"use strict";(self.webpackChunkowncast_web=self.webpackChunkowncast_web||[]).push([[8083],{"./node_modules/date-fns/_lib/getRoundingMethod.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function getRoundingMethod(method){return number=>{const result=(method?Math[method]:Math.trunc)(number);return 0===result?0:result}}__webpack_require__.d(__webpack_exports__,{u:()=>getRoundingMethod})},"./node_modules/date-fns/compareAsc.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{U:()=>compareAsc});var _toDate_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/date-fns/toDate.js");function compareAsc(dateLeft,dateRight){const diff=+(0,_toDate_js__WEBPACK_IMPORTED_MODULE_0__.Q)(dateLeft)-+(0,_toDate_js__WEBPACK_IMPORTED_MODULE_0__.Q)(dateRight);return diff<0?-1:diff>0?1:diff}},"./node_modules/date-fns/differenceInMilliseconds.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{_:()=>differenceInMilliseconds});var _toDate_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/date-fns/toDate.js");function differenceInMilliseconds(laterDate,earlierDate){return+(0,_toDate_js__WEBPACK_IMPORTED_MODULE_0__.Q)(laterDate)-+(0,_toDate_js__WEBPACK_IMPORTED_MODULE_0__.Q)(earlierDate)}},"./node_modules/date-fns/differenceInMonths.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{d:()=>differenceInMonths});var normalizeDates=__webpack_require__("./node_modules/date-fns/_lib/normalizeDates.js"),compareAsc=__webpack_require__("./node_modules/date-fns/compareAsc.js");function differenceInCalendarMonths(laterDate,earlierDate,options){const[laterDate_,earlierDate_]=(0,normalizeDates.d)(options?.in,laterDate,earlierDate);return 12*(laterDate_.getFullYear()-earlierDate_.getFullYear())+(laterDate_.getMonth()-earlierDate_.getMonth())}var toDate=__webpack_require__("./node_modules/date-fns/toDate.js");function endOfDay(date,options){const _date=(0,toDate.Q)(date,options?.in);return _date.setHours(23,59,59,999),_date}function endOfMonth(date,options){const _date=(0,toDate.Q)(date,options?.in),month=_date.getMonth();return _date.setFullYear(_date.getFullYear(),month+1,0),_date.setHours(23,59,59,999),_date}function isLastDayOfMonth(date,options){const _date=(0,toDate.Q)(date,options?.in);return+endOfDay(_date,options)==+endOfMonth(_date,options)}function differenceInMonths(laterDate,earlierDate,options){const[laterDate_,workingLaterDate,earlierDate_]=(0,normalizeDates.d)(options?.in,laterDate,laterDate,earlierDate),sign=(0,compareAsc.U)(workingLaterDate,earlierDate_),difference=Math.abs(differenceInCalendarMonths(workingLaterDate,earlierDate_));if(difference<1)return 0;1===workingLaterDate.getMonth()&&workingLaterDate.getDate()>27&&workingLaterDate.setDate(30),workingLaterDate.setMonth(workingLaterDate.getMonth()-sign*difference);let isLastMonthNotFull=(0,compareAsc.U)(workingLaterDate,earlierDate_)===-sign;isLastDayOfMonth(laterDate_)&&1===difference&&1===(0,compareAsc.U)(laterDate_,earlierDate_)&&(isLastMonthNotFull=!1);const result=sign*(difference-+isLastMonthNotFull);return 0===result?0:result}},"./node_modules/date-fns/differenceInSeconds.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>differenceInSeconds});var _lib_getRoundingMethod_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/date-fns/_lib/getRoundingMethod.js"),_differenceInMilliseconds_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/date-fns/differenceInMilliseconds.js");function differenceInSeconds(laterDate,earlierDate,options){const diff=(0,_differenceInMilliseconds_js__WEBPACK_IMPORTED_MODULE_0__._)(laterDate,earlierDate)/1e3;return(0,_lib_getRoundingMethod_js__WEBPACK_IMPORTED_MODULE_1__.u)(options?.roundingMethod)(diff)}},"./node_modules/date-fns/formatDistanceToNow.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Q:()=>formatDistanceToNow});var constructFrom=__webpack_require__("./node_modules/date-fns/constructFrom.js");function constructNow(date){return(0,constructFrom.L)(date,Date.now())}var en_US=__webpack_require__("./node_modules/date-fns/locale/en-US.js"),_lib_defaultOptions=__webpack_require__("./node_modules/date-fns/_lib/defaultOptions.js"),getTimezoneOffsetInMilliseconds=__webpack_require__("./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js"),normalizeDates=__webpack_require__("./node_modules/date-fns/_lib/normalizeDates.js"),compareAsc=__webpack_require__("./node_modules/date-fns/compareAsc.js"),constants=__webpack_require__("./node_modules/date-fns/constants.js"),differenceInMonths=__webpack_require__("./node_modules/date-fns/differenceInMonths.js"),differenceInSeconds=__webpack_require__("./node_modules/date-fns/differenceInSeconds.js");function formatDistance(laterDate,earlierDate,options){const defaultOptions=(0,_lib_defaultOptions.j)(),locale=options?.locale??defaultOptions.locale??en_US._,comparison=(0,compareAsc.U)(laterDate,earlierDate);if(isNaN(comparison))throw new RangeError("Invalid time value");const localizeOptions=Object.assign({},options,{addSuffix:options?.addSuffix,comparison}),[laterDate_,earlierDate_]=(0,normalizeDates.d)(options?.in,...comparison>0?[earlierDate,laterDate]:[laterDate,earlierDate]),seconds=(0,differenceInSeconds.c)(earlierDate_,laterDate_),offsetInSeconds=((0,getTimezoneOffsetInMilliseconds.D)(earlierDate_)-(0,getTimezoneOffsetInMilliseconds.D)(laterDate_))/1e3,minutes=Math.round((seconds-offsetInSeconds)/60);let months;if(minutes<2)return options?.includeSeconds?seconds<5?locale.formatDistance("lessThanXSeconds",5,localizeOptions):seconds<10?locale.formatDistance("lessThanXSeconds",10,localizeOptions):seconds<20?locale.formatDistance("lessThanXSeconds",20,localizeOptions):seconds<40?locale.formatDistance("halfAMinute",0,localizeOptions):seconds<60?locale.formatDistance("lessThanXMinutes",1,localizeOptions):locale.formatDistance("xMinutes",1,localizeOptions):0===minutes?locale.formatDistance("lessThanXMinutes",1,localizeOptions):locale.formatDistance("xMinutes",minutes,localizeOptions);if(minutes<45)return locale.formatDistance("xMinutes",minutes,localizeOptions);if(minutes<90)return locale.formatDistance("aboutXHours",1,localizeOptions);if(minutes<constants.H_){const hours=Math.round(minutes/60);return locale.formatDistance("aboutXHours",hours,localizeOptions)}if(minutes<2520)return locale.formatDistance("xDays",1,localizeOptions);if(minutes<constants.fH){const days=Math.round(minutes/constants.H_);return locale.formatDistance("xDays",days,localizeOptions)}if(minutes<2*constants.fH)return months=Math.round(minutes/constants.fH),locale.formatDistance("aboutXMonths",months,localizeOptions);if(months=(0,differenceInMonths.d)(earlierDate_,laterDate_),months<12){const nearestMonth=Math.round(minutes/constants.fH);return locale.formatDistance("xMonths",nearestMonth,localizeOptions)}{const monthsSinceStartOfYear=months%12,years=Math.trunc(months/12);return monthsSinceStartOfYear<3?locale.formatDistance("aboutXYears",years,localizeOptions):monthsSinceStartOfYear<9?locale.formatDistance("overXYears",years,localizeOptions):locale.formatDistance("almostXYears",years+1,localizeOptions)}}function formatDistanceToNow(date,options){return formatDistance(date,constructNow(date),options)}}}]);